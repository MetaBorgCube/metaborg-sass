module codegen/build

imports
  evaluate/evaluate
  evaluate/interpret/interpret
  codegen/codegen
  pp
  
imports

  libspoofax/resource/path

rules

  /**
   * Transform Sass AST to Sass AST and show the resulting ATerm.
   * The transformed AST has no Sass specific AST nodes anymore.
   *
   * Warning: transpilation will still occur, even when type checking has failed!
   *
   * @type Sass AST -> CSS AST
   */ 
  transpile-interpret:
    (selected, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|$[css.aterm])> path
    ; result   := <interpret-script; codegen; strip-annos> ast

  /**
   * Transpiles a Sass file to a CSS file.
   */
  transpile-print:
    (selected, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"css")> path
    ; resultAST   := <transpile-sass> ast
    ; result := <pp-sass-string> resultAST

  transpile-print-strict:
    (selected, f, ast, path, project-path)
      -> <transpile-print> (selected, f, ast, path, project-path)
    where
      <nabl2-get-ast-analysis; not(nabl2-analysis-has-errors)> ast
