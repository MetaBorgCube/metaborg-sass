module Declaration

imports 
  Common
  Expression
  Selector

context-free start-symbols
  Declaration
  ScriptItem

template options
  tokenize: ";()[]"

/*
 * General declarations
 */
context-free syntax

  Declaration = ScriptItem
  ScriptItem.BlockDeclaration = <
  <Selector> {
    <Declaration*>
    
  }
  
  >
  ScriptItem.VarDeclaration = <<VAR>: <PropertyExp> <VariableDeclarationFlag*>;>
  
  VariableDeclarationFlag.Global  = <!global>
  VariableDeclarationFlag.Default = <!default>
  
/**
 * Mixins
 */
context-free syntax
  ScriptItem.MixinDeclaration = <
  @mixin <ID><FArgumentGroup?> {
    <Declaration*>
  }        
  
  >
  
  FArgumentGroup.FArguments = <(<{FArgument ","}+>)>
  FArgumentGroup.FArgumentsStandardAndDefaults = 
                                      <(<{FArgument ","}+>, <{FArgumentDefault ","}+>)>
  FArgumentGroup.FArgumentsDefaults = <(<{FArgumentDefault ","}+>)>
  
  FArgument.FArg = <<VAR>>
  FArgumentDefault.FArgDefault = <<VAR>: <PropertyExp>>

  
  ScriptItem.IncludeMixin = <@include <ID><AArgumentGroup?>;>
  ScriptItem.IncludeMixinContentBlock = <
  @include <ID><AArgumentGroup?> {
    <Declaration*>
  }
  >
  
  AArgumentGroup.AArgGroup = <(<{AArgument ","}*>)> {prefer}
  AArgument.AArg = <<PropertyExp>>
  AArgumentGroup.KeywordAArgGroup = <(<{AArgumentKeyword ","}*>)>
  AArgumentKeyword.KeywordAArg = <<VAR>: <PropertyExp>>


/*
 * Namespaced property declarations
 */
context-free syntax

  /* 
   * TODO: Property declarations need not be followed by a ; per se, 
   * however this is not true when there are multiple consecutive
   * property declarations. 
   */
  Declaration = PropertyDeclaration
  PropertyDeclaration.PropertyDeclaration = <<PROPERTY>: <PropertyExp>;> 
  PropertyDeclaration.NamespacePropertyDeclaration = <
  <PROPERTY>: {
    <PropertyDeclaration*>
  }
  
  >

syntax
  // Using kernel syntax, since layout matters to differentiate between 
  // namespaces and pseudoclasses
  PropertyDeclaration-CF.NamespacePropertyDeclarationExp = 
  PROPERTY-LEX ":" LAYOUT-CF PropertyExp-CF LAYOUT-CF "{"
    LAYOUT?-CF PropertyDeclaration*-CF LAYOUT?-CF
  "}"

context-free priorities
  PropertyDeclaration.NamespacePropertyDeclaration > ScriptItem.BlockDeclaration
