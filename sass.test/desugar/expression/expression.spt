module desugar-expression-test

language sass

fixture [[
.x {
  y: [[...]];
}
]]

test desugar addition [[
1 + 3
]] run desugar-all to BinExp(Add(), Int("1"), Int("3"))

test desugar subtraction [[
1 - 3
]] run desugar-exp to BinExp(Sub(), Int("1"), Int("3"))

test desugar multiplication [[
1 * 3
]] run desugar-exp to BinExp(Mul(), Int("1"), Int("3"))

test desugar division [[
1 / 5
]] run desugar-exp to BinExp(Div(), Int("1"), Int("5"))

test desugar modulo [[
3 % 2
]] run desugar-exp to BinExp(Mod(), Int("3"), Int("2"))

test desugar complex expression [[
3 % 2 == 0
]] run desugar-exp to BinExp(Eq(), 
                        BinExp(Mod(), Int("3"), Int("2")), 
                        Int("0"))

test desugar or [[
true or false
]] run desugar-exp to BinExp(Or(), True(), False())

test desugar and [[
true and false
]] run desugar-exp to BinExp(And(), True(), False())

test desugar equal [[
true == false
]] run desugar-exp to BinExp(Eq(), True(), False())

test desugar not equal [[
true != false
]] run desugar-exp to UnExp(Not(), BinExp(Eq(), True(), False()))

test desugar greater than [[
5 > 4
]] run desugar-exp to BinExp(Gt(), Int("5"), Int("4"))

test desugar greater equal than [[
5 >= 4
]] run desugar-exp to BinExp(Or(), 
                        BinExp(Gt(), Int("5"), Int("4")),
                        BinExp(Eq(),  Int("5"),  Int("4")))

test desugar less than [[
5 < 4
]] run desugar-exp to UnExp(Not(), BinExp(Or(),
                                    BinExp(Gt(), Int("5"), Int("4")),
                                    BinExp(Eq(), Int("5"),  Int("4"))
                                   ))

test desugar less equal than [[
5 <= 4
]] run desugar-exp to UnExp(Not(), BinExp(Gt(), Int("5"), Int("4")))

test desugar not than [[
not true 
]] run desugar-exp to UnExp(Not(), True())

test length [[
5px
]] run desugar-all to Length(Int("5"), "px")
