module name-resolution-mixin-test

language sass

test resolve mixin [[
@mixin [[hello]] {}
@include [[hello]];
]] resolve #2 to #1

test shadowing mixin [[
@mixin hello {}
@mixin [[hello]] {}
@include [[hello]];
]] resolve #2 to #1

test not enough arguments is not allowed [[
@mixin hello($v) {}
@include hello();
]] > 0 errors

test too many arguments are not allowed [[
@mixin hello {}

@include hello(4);
]] > 0 errors

test default argument need not be given [[
@mixin hello($v: 10px) {}
@include hello;
]] 0 errors

test only non-default arguments need to be given [[
@mixin hello($v, $w: 1) {}
@include hello(5);
]] 0 errors

test default argument may be given [[
@mixin hello($v, $w) {}
@include hello(5, 2);
]] 0 errors

test keyword arguments are allowed [[
@mixin hello($v) {}
@include hello($v: 2px);
]] 0 errors

test keyword arguments may be given in any order [[
@mixin hello($v, $w) {}
@include hello($w: 4, $v: 3);
]] 0 errors

test only non-default keyword arguments need to be given [[
@mixin hello($v, $w: 5px) {}
@include hello($v: 3);
]] 0 errors

test non-default keyword arguments need to be given [[
@mixin hello($v, $w: 5px) {}
@include hello($w: 3);
]] > 0 errors

test global var declared in mixin not available until inclusion [[
@mixin h {
  $v: 1 !global;
}
$w : $v;
]] > 0 warnings

test global var only resolves after inclusion of mixin [[
[[$v]]: 98;
@mixin h {
  $v: 1 !global;
}
$w: [[$v]];
]] resolve #2 to #1

test global varref resolves to vardecl in mixin after inclusion of mixin [[
$v: 98;
@mixin h {
  [[$v]]: 1 !global;
}
@include h;
$w: [[$v]];
]] resolve #2 to #1

test local var is not available outside mixin [[
@mixin hello {
  $v: 5px;
}
$w: $v;
]] > 0 warnings

test global varref in mixin in block resolves properly [[
.m {
  @mixin hello {
    [[$t]]: 5 !global;
  }
  @include hello;
  prop: [[$t]];
}
]] resolve #2 to #1

test global varref in mixin block does not resolve before inclusion [[
.m {
  @mixin hello {
    $t: 5 !global;
  }
  prop: $t;
}
]] > 0 errors

test global varref in mixin in block resolves outside block if included in block [[
.m {
  @mixin hello {
    [[$t]]: 5 !global;
  } 
  @include hello;
}

.b {
  prop: [[$t]];
}
]] resolve #2 to #1

test varref does not resolve to global in mixin in block if mixin is not included [[
[[$v]]: 1;
.m {
  @mixin hello {
    $v: 5 !global;
  }
}
.b {
  width: [[$v]];
}
]] resolve #2 to #1

test including a non-rootable mixin reports errors [[
@mixin hello {
  prop: 5;
}
@include hello;
]] > 0 errors

test including a rootable mixin reports no errors [[
@mixin hello {
  .m {
    prop: 5;
  } 
}
@include hello;
]] 0 errors
